# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
version: 2
jobs: #we now have TWO jobs, so that a workflow can coordinate them!
  one: #This is our first job
    docker: #it uses the docker executor
      - image: circleci/ruby:2.4.1 #specifically, a docker iamge with ruby 2.4.1
        auth: 
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
    # Steps are a list of commands to run inside the docker container above. 
    steps: 
      - checkout # this pulls code down from GitHub
      - run: echo "A first hello" # This prints "A first hello" to stdout.
      - run: sleep 25 # A command telling the job to "sleep" for 25 seconds. 
  two: # This is our second job. 
    docker: # it runs inside a docker image, the same as above. 
      - image: circleci/ruby:2.4.1
        auth: 
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference. 
    steps: 
      - checkout
      - run: echo "A more familiar hi" # We run a similar echo command to above. 
      - run: sleep 15 # And then sleep for 15 seconds. 
# Under the workflows: map, we can coordinate our two jobs, defined above. 
workflows: 
  version: 2
  one_and_two: # This is the name of our workflow
    jobs: # And here we tell it what jobs to run.
      - one 
      - two